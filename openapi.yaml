openapi: 3.1.0
info:
  title: Metadata Quality
  description: Metadata quality of datasets
  version: 0.1.0

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
    DatasetsRequest:
      type: object
      properties:
        datasets:
          type: array
          items:
            type: string
      required:
        - datasets
    ScorePostRequest:
      type: object
      properties:
        turtle_assessment:
          type: string
        jsonld_assessment:
          type: string
        scores:
          $ref: "#/components/schemas/DatasetScore"
      required:
        - turtle_assessment
        - jsonld_assessment
        - scores
    DatasetsGraphs:
      type: object
      properties:
        graphs:
          type: object
          additionalProperties:
            type: string
      required:
        - graphs
    DatasetsScores:
      type: object
      properties:
        scores:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DatasetScore"
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/DimensionAggregate"
      required:
        - scores
        - aggregations
    DatasetScore:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/Score"
        distributions:
          type: array
          items:
            $ref: "#/components/schemas/Score"
      required:
        - dataset
        - distributions
    Score:
      type: object
      properties:
        id:
          type: string
        dimensions:
          type: array
          items:
            $ref: "#/components/schemas/Dimension"
        score:
          type: integer
        max_score:
          type: integer
      required:
        - id
        - dimensions
        - score
        - max_score
    Dimension:
      type: object
      properties:
        id:
          type: string
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/Metric"
        score:
          type: integer
        max_score:
          type: integer
      required:
        - id
        - metrics
        - score
        - max_score
    DimensionAggregate:
      type: object
      properties:
        id:
          type: string
        score:
          type: number
          format: double
        max_score:
          type: number
          format: double
      required:
        - id
        - score
        - max_score
    Metric:
      type: object
      properties:
        id:
          type: string
        score:
          type: integer
        is_scored:
          type: boolean
        max_score:
          type: integer
      required:
        - id
        - score
        - max_score
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
        message:
          type: string
          description: Optional message providing additional information
      required:
        - success

paths:
  /api/assessments/{uuid}:
    get:
      operationId: getAssessment
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
          description: Assessment UUID
        - in: header
          name: Accept
          schema:
            type: string
            enum: [text/turtle, application/ld+json]
          required: false
          description: Content type preference for the response
      summary: Get dataset assessment
      description: Retrieves a dataset assessment in either Turtle or JSON-LD format based on the Accept header
      responses:
        "200":
          description: Assessment retrieved successfully
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    "@id":
                      type: string
                    "@type":
                      type: string
                  additionalProperties: true
            text/turtle:
              schema:
                type: string
        "404":
          description: Assessment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: updateAssessment
      security:
        - apiKey: []
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
          required: true
          description: Assessment UUID
      requestBody:
        description: Assessment in turtle and jsonld format, along with json scores
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScorePostRequest"
      summary: Store dataset assessment
      description: Stores a dataset assessment with scores. Requires API key authentication.
      responses:
        "202":
          description: Assessment accepted for processing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                success: true
        "401":
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/scores:
    post:
      operationId: getScores
      requestBody:
        description: Dataset URIs to retrieve scores for
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetsRequest"
      summary: Get dataset assessment scores
      description: Retrieves scores for multiple datasets
      responses:
        "200":
          description: Scores retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetsScores"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/assessments:
    post:
      operationId: getAssessments
      parameters:
        - in: header
          name: Accept
          schema:
            type: string
            enum: [text/turtle, application/ld+json]
          required: false
          description: Content type preference for the response
      requestBody:
        description: Dataset URIs to retrieve assessments for
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetsRequest"
      summary: Get dataset assessments
      description: Retrieves assessments for multiple datasets in either Turtle or JSON-LD format based on the Accept header
      responses:
        "200":
          description: Assessments retrieved successfully
          content:
            application/ld+json:
              schema:
                type: string
            text/turtle:
              schema:
                type: string
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
